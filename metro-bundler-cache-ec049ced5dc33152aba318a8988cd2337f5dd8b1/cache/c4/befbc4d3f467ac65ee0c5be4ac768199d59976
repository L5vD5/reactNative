Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/l5vd5/watchman/reactNative/Screen3.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _nativeBase = require('native-base');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _Container = require('./Container');

var _Container2 = _interopRequireDefault(_Container);

var _getData = require('./getData.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Screen3: {
        displayName: 'Screen3'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/l5vd5/watchman/reactNative/Screen3.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var Screen3 = _wrapComponent('Screen3')(function (_React$Component) {
    _inherits(Screen3, _React$Component);

    function Screen3(props) {
        _classCallCheck(this, Screen3);

        var _this = _possibleConstructorReturn(this, (Screen3.__proto__ || Object.getPrototypeOf(Screen3)).call(this, props));

        _this.state = {
            language: (0, _getData.getData)(_this.props.language)
        };

        global.checked = new Array();
        _this.props.checked.map(function (s, i) {
            if (s) {
                global.checked.push(i);
            }
        });
        global.object = {
            language: _this.props.language,
            symptom: _this.props.symptom == undefined ? {} : _this.props.symptom
        };

        global.object.symptom[_this.props.where] = {
            where: _this.props.where,
            whereLanguage: _this.props.whereLanguage,
            whereKor: _this.props.whereKor,
            array: global.checked
        };
        return _this;
    }

    _createClass(Screen3, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var where = this.props.where;
            var goToMap = function goToMap() {
                return _reactNativeRouterFlux.Actions.map({ language: _this2.props.language });
            };
            var goToScreen2 = function goToScreen2() {
                _reactNativeRouterFlux.Actions.screen2(global.object);
            };
            var korLanguage = (0, _getData.getData)('kor');
            var array2 = Object.values(global.object.symptom);
            return _react3.default.createElement(
                _Container2.default,
                { language: this.props.language, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 48
                    }
                },
                _react3.default.createElement(
                    _nativeBase.Content,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 49
                        }
                    },
                    array2.map(function (s1, i1) {
                        var array3 = s1.array;
                        return _react3.default.createElement(
                            _nativeBase.View,
                            { key: i1, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 52
                                }
                            },
                            _react3.default.createElement(
                                _nativeBase.ListItem,
                                { style: { paddingLeft: 18, marginLeft: 0 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 53
                                    }
                                },
                                _react3.default.createElement(
                                    _nativeBase.Text,
                                    { style: { fontSize: 25 }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 54
                                        }
                                    },
                                    s1.whereKor
                                ),
                                _react3.default.createElement(
                                    _nativeBase.Text,
                                    { style: { position: "absolute", textAlign: 'right', width: "100%", fontSize: 25 }, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 57
                                        }
                                    },
                                    s1.whereLanguage
                                )
                            ),
                            array3.map(function (s2, i2) {
                                return _react3.default.createElement(
                                    _nativeBase.View,
                                    { key: i2, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 62
                                        }
                                    },
                                    _react3.default.createElement(
                                        _nativeBase.Item,
                                        {
                                            style: { marginLeft: 0, paddingLeft: 18 },
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 63
                                            }
                                        },
                                        _react3.default.createElement(
                                            _nativeBase.Text,
                                            { style: { fontSize: 22 }, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 66
                                                }
                                            },
                                            korLanguage.symptom[s1.where][s2][1]
                                        )
                                    ),
                                    _react3.default.createElement(
                                        _nativeBase.Item,
                                        {
                                            style: { marginLeft: 0, paddingLeft: 18 },
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 70
                                            }
                                        },
                                        _react3.default.createElement(
                                            _nativeBase.Text,
                                            { style: { textAlign: 'right', width: '100%', paddingRight: 18 }, __source: {
                                                    fileName: _jsxFileName,
                                                    lineNumber: 73
                                                }
                                            },
                                            _this2.state.language.symptom[s1.where][s2][1]
                                        )
                                    )
                                );
                            })
                        );
                    }),
                    _react3.default.createElement(
                        _nativeBase.Button,
                        { block: true, click: true, onPress: goToMap, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 81
                            }
                        },
                        _react3.default.createElement(
                            _nativeBase.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 82
                                }
                            },
                            ' >> '
                        )
                    ),
                    _react3.default.createElement(
                        _nativeBase.Button,
                        { block: true, click: true, onPress: goToScreen2, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 84
                            }
                        },
                        _react3.default.createElement(
                            _nativeBase.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 85
                                }
                            },
                            ' More '
                        )
                    )
                )
            );
        }
    }]);

    return Screen3;
}(_react3.default.Component));

exports.default = Screen3;